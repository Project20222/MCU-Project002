/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2022 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

#include <stdint.h>

#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void)
{
	//Setting all Registers with the base address...
	//Address of RCC
	uint32_t  *pRccCtrlReg=(uint32_t *)0x40023830;

	//Address of GPIOD to configure as output mode
	uint32_t  *pGPIODModeReg=(uint32_t *)0x40020C00;

	//Address of GPIOD to write the output
	uint32_t  *pGPIODOutReg=(uint32_t *)0x40020C14;

	//Step 1.Enable the peripheral clock ctrl Register ie,RCC_AHB1ENR
	*pRccCtrlReg=*pRccCtrlReg | 0X0008;

	//Step 2.Configure the GPIOD pin mode as output

	//1.Clearing the all the bits with 1's except the 24 & 25 th bits(using AND operations)
	*pGPIODModeReg= *pGPIODModeReg & 0XFCFFFFFF;
	//2.Setting all the bits with 0's except 24 th 1 bcoz it is in output mode...(using OR operations)
	*pGPIODModeReg=*pGPIODModeReg |0X01000000;

	//Step3.Configure the GPIOD output data register with the 1 ie,high so the LED wil be on.Activate the 12 pin
	*pGPIODOutReg=*pGPIODOutReg | 0X1000;

	while(1);
}
